#!/bin/bash

alias ll='ls -lahHF'
alias history-edit='vim $HOME/.zsh_history'

alias gpg-agent-setup='eval $($HOME/dev/juliaaano/scripts/gpg-agent-setup.sh)'
alias gpg-home='export GNUPGHOME=$HOME/.gnupg'

alias notes-private='gpg --decrypt $HOME/Dropbox/secrets/notes-private.txt.asc | open -f -a "Sublime Text.app"'

alias dc='docker compose'
alias runs='gh run view'

alias nav='source $HOME/venv/navigator/bin/activate'

### K8S / OCP ###

#alias kc='kubectl config use-context'
alias kc=kubectx
alias ns=kubens

alias pods='kubectl get pods'
alias routes='kubectl get routes'
alias logs='kubectl logs -f'

alias console='open $(oc whoami --show-console)'

alias kconf-bkp='cp -av $HOME/.kube/config $HOME/.kube/config.bkp'
alias kconf-rcv='cp -av $HOME/.kube/config.bkp $HOME/.kube/config'

alias kubectl-fix='brew unlink kubernetes-cli && brew link --overwrite kubernetes-cli'

### FUNCTIONS ###

function ocl {
  OCP_API=${1}
  OCP_USR=${2:-'admin'}
  OCP_PWD=${3:-'r3dh4t1!'}
  kubens default
  if [ "${OCP_PWD}" = "ask" ]; then
    ${HOME}/openshift-cli/oc10 login "${OCP_API}" -u "${OCP_USR}"
  else
    ${HOME}/openshift-cli/oc10 login "${OCP_API}" -u "${OCP_USR}" -p "${OCP_PWD}"
  fi
}

function nstoggle {
  if [ "${KUBE_PS1_NS_ENABLE}" = true ]; then
    export KUBE_PS1_NS_ENABLE=false
  else
    export KUBE_PS1_NS_ENABLE=true
  fi
}

#function ns { kubectl config set-context $(kubectl config current-context) --namespace=$@ }

function secrets { gpg --decrypt $@ }
function new-script { cp $HOME/dev/juliaaano/scripts/template.sh $@ }

function psaux { ps auxww | grep -i $@ | grep -v grep ;}
function lpcurl { echo "------------------------------\ncurl $1 times the url $2\n------------------------------\n"; for ((i=1;i<=$1;i++)); do curl -k -s -i $2; echo "\n------------------------------\n"; done }
function jwt { jq -R 'split(".") | .[1] | @base64d | fromjson' <<< $@ }

function weather { curl wttr.in/$@ }

function mfa {
  local service=""
  [ $# -eq 1 ] && service="$1"
  otp=$(ykman oath accounts code --single "${service}")
  [ -n "${otp}" ] || return 1
  echo -n "${otp}" | pbcopy
  echo "OTP copied to clipboard"
}
